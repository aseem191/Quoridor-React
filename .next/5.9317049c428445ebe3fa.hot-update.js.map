{"version":3,"file":"5.9317049c428445ebe3fa.hot-update.js","sources":["webpack:///pages/game.js"],"sourcesContent":["import Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport urlname from '../components/urlname.js'\r\nimport { connect } from \"react-redux\";\r\nimport Page from \"./page.js\"\r\nimport { updateGame, updateName, updateGameID } from \"../redux/actions.js\";\r\n\r\nclass Game extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.fetchGame = this.fetchGame.bind(this);\r\n\t\tthis.brickMouseOver = this.brickMouseOver.bind(this);\r\n\t\tthis.brickMouseLeave = this.brickMouseLeave.bind(this);\r\n\t\tthis.clickBrick = this.clickBrick.bind(this);\r\n\t\tthis.squareMouseOver = this.squareMouseOver.bind(this);\r\n\t\tthis.squareMouseLeave = this.squareMouseLeave.bind(this);\r\n\t\tthis.clickSquare = this.clickSquare.bind(this);\r\n\r\n\r\n\t\tthis.props.dispatch(updateGame(null));\r\n\t\tvar arr = [];\r\n\t\tfor(var x = 0; x < 8; x++){\r\n\t\t\tarr[x] = [];\r\n\t\t\tfor(var y = 0; y < 8; y++){\r\n\t\t\t\tarr[x][y] = \"#4286f4\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar arr2 = [];\r\n\t\tfor(var x = 0; x < 8; x++){\r\n\t\t\tarr2[x] = [];\r\n\t\t\tfor(var y = 0; y < 8; y++){\r\n\t\t\t\tarr2[x][y] = \"#4286f4\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar arr3 = [];\r\n\t\tfor(var x = 0; x < 9; x++){\r\n\t\t\tarr3[x] = [];\r\n\t\t\tfor(var y = 0; y < 9; y++){\r\n\t\t\t\tarr3[x][y] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.state = {\r\n\t\t\tsquareColor: \"#555\",\r\n\t\t\tbrickDefaultColor: \"#4286f4\",\r\n\t\t\tbrickExistsColor: \"#eda034\",\r\n\t\t\tbrickHighlightedColor: \"#000863\",\r\n\t\t\tplayer1Color: \"#d30606\",\r\n\t\t\tplayer2Color: \"#30b500\",\r\n\t\t\tplayerArray: arr3.slice(),\r\n\t\t\tverticalBricks: arr.slice(),\r\n\t\t\thorizontalBricks: arr2.slice(),\r\n\t\t}\r\n\r\n\t\tvar params = {uname: this.props.name}\r\n\t\tif(!this.props.gameID){\r\n\t\t\tfetch(urlname + \"/player\", {method: 'POST', headers: { 'Content-Type': 'application/json'}, body: JSON.stringify(params)}).then(response => response.json()).then(data => {\r\n\t\t\t\tconsole.log(\"player response is \" + JSON.stringify(data))\r\n\t\t\t\tif(!data.error){\r\n\t\t\t\t\tfetch(urlname + \"/game/\" + data.id).then(response => response.json()).then(data => {\r\n\t\t\t\t\t\tthis.props.dispatch(updateGame(data));\r\n\t\t\t\t\t\tthis.props.dispatch(updateGameID(data._id));\r\n\t\t\t\t\t\tconsole.log(\"game is \" + JSON.stringify(data))\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\tfetchGame(){\r\n\t\tif(this.props.gameID){\r\n\t\t\tfetch(urlname + \"/game/\" + this.props.gameID).then(response => response.json()).then(data => {\r\n\t\t\t\tthis.props.dispatch(updateGame(data));\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.interval = setInterval(() => this.fetchGame(), 2000);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.interval);\r\n\t}\r\n\r\n\r\n\tsquareMouseOver(event){\r\n\t\tvar playing = \"\";\r\n\t\tif(this.props.game.PlayerTurn == 1){\r\n\t\t\tplaying = this.props.game.Player1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tplaying = this.props.game.Player2;\r\n\t\t}\r\n\r\n\t\tif(this.props.game){\r\n\t\t\tif(playing == this.props.name){\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsquareMouseLeave(event){\r\n\t\tvar playing = \"\";\r\n\t\tif(this.props.game.PlayerTurn == 1){\r\n\t\t\tplaying = this.props.game.Player1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tplaying = this.props.game.Player2;\r\n\t\t}\r\n\r\n\t\tif(this.props.game){\r\n\t\t\tif(playing == this.props.name){\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclickSquare(event){\r\n\t\tvar playing = \"\";\r\n\t\tif(this.props.game.PlayerTurn == 1){\r\n\t\t\tplaying = this.props.game.Player1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tplaying = this.props.game.Player2;\r\n\t\t}\r\n\r\n\t\tif(this.props.game){\r\n\t\t\tif(playing == this.props.name){\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclickBrick(event){\r\n\t\tvar playing = \"\";\r\n\t\tif(this.props.game.PlayerTurn == 1){\r\n\t\t\tplaying = this.props.game.Player1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tplaying = this.props.game.Player2;\r\n\t\t}\r\n\r\n\t\tif(this.props.game){\r\n\t\t\tif(playing == this.props.name){\r\n\t\t\t\tvar vertical = true;\r\n\t\t\t\tif(event.currentTarget.getAttribute('orientation') == \"vertical\"){\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tvertical = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbrickMouseOver(event){\r\n\t\tvar playing = \"\";\r\n\t\tif(this.props.game.PlayerTurn == 1){\r\n\t\t\tplaying = this.props.game.Player1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tplaying = this.props.game.Player2;\r\n\t\t}\r\n\r\n\t\tif(this.props.game){\r\n\t\t\tif(playing == this.props.name){\r\n\t\t\t\tvar x = event.currentTarget.getAttribute('x');\r\n\t\t\t\tvar y = event.currentTarget.getAttribute('y');\r\n\t\t\t\tvar orientation = event.currentTarget.getAttribute('orientation');\r\n\t\t\t\tif(orientation == \"vertical\"){\r\n\t\t\t\t\tvar temparr = this.state.verticalBricks.slice();\r\n\t\t\t\t\ttemparr[x][y] = this.state.brickHighlightedColor;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tverticalBricks: temparr\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse if(orientation == \"horizontal\"){\r\n\t\t\t\t\tvar temparr = this.state.horizontalBricks.slice();\r\n\t\t\t\t\ttemparr[x][y] = this.state.brickHighlightedColor;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thorizontalBricks: temparr\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse if(orientation == \"middle\"){\r\n\t\t\t\t\tvar temparr = this.state.verticalBricks.slice();\r\n\t\t\t\t\ttemparr[x][y] = this.state.brickHighlightedColor;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tverticalBricks: temparr\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n\tbrickMouseLeave(event){\r\n\t\tvar playing = \"\";\r\n\t\tif(this.props.game.PlayerTurn == 1){\r\n\t\t\tplaying = this.props.game.Player1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tplaying = this.props.game.Player2;\r\n\t\t}\r\n\r\n\t\tif(this.props.game){\r\n\t\t\tif(playing == this.props.name){\r\n\t\t\t\tvar x = event.currentTarget.getAttribute('x');\r\n\t\t\t\tvar y = event.currentTarget.getAttribute('y');\r\n\t\t\t\tvar orientation = event.currentTarget.getAttribute('orientation');\r\n\t\t\t\tconsole.log(\"mouseover\" + x + y + orientation)\r\n\t\t\t\tif(orientation == \"vertical\"){\r\n\t\t\t\t\tvar temparr = this.state.verticalBricks.slice();\r\n\t\t\t\t\ttemparr[x][y] = this.state.brickDefaultColor;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tverticalBricks: temparr\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse if(orientation == \"horizontal\"){\r\n\t\t\t\t\tvar temparr = this.state.horizontalBricks.slice();\r\n\t\t\t\t\ttemparr[x][y] = this.state.brickDefaultColor;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thorizontalBricks: temparr\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse if(orientation == \"middle\"){\r\n\t\t\t\t\tvar temparr = this.state.verticalBricks.slice();\r\n\t\t\t\t\ttemparr[x][y] = this.state.brickDefaultColor;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tverticalBricks: temparr\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{this.props.game ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t{this.props.game.Player2 ?\r\n\t\t\t\t\t\t(this.props.game.PlayerTurn == 1 ?\r\n\t\t\t\t\t\t<div><h2>It's {this.props.game.Player1}'s turn! </h2> <br/> <br/></div>\r\n\t\t\t\t\t\t: <div><h2>It's {this.props.game.Player2}'s turn! </h2> <br/> <br/></div>)\r\n\t\t\t\t\t\t: <h4> Waiting for player to play against... you could also open another tab, create another player, and play against yourself if you'd like ðŸ˜‰ </h4>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div style={{backgroundColor: this.state.brickDefaultColor, width: \"650px\"}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div x={0} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"50px\", backgroundColor: this.state.playerArray[0][0] == 1 ? this.state.player1Color : (this.state.playerArray[0][0] == 2 ? this.state.player2Color : this.state.squareColor)}} onClick={this.clickSquare} onMouseOver={this.squareMouseOver} onMouseLeave={this.squareMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"vertical\" x={0} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"25px\", backgroundColor: this.state.verticalBricks[0][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div x={1} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"50px\", backgroundColor: this.state.playerArray[1][0] == 1 ? this.state.player1Color : (this.state.playerArray[1][0] == 2 ? this.state.player2Color : this.state.squareColor)}} onClick={this.clickSquare} onMouseOver={this.squareMouseOver} onMouseLeave={this.squareMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"vertical\" x={1} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"25px\", backgroundColor: this.state.verticalBricks[1][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div x={2} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"50px\", backgroundColor: this.state.playerArray[2][0] == 1 ? this.state.player1Color : (this.state.playerArray[2][0] == 2 ? this.state.player2Color : this.state.squareColor)}} onClick={this.clickSquare} onMouseOver={this.squareMouseOver} onMouseLeave={this.squareMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"vertical\" x={2} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"25px\", backgroundColor: this.state.verticalBricks[2][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div x={3} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"50px\", backgroundColor: this.state.playerArray[3][0] == 1 ? this.state.player1Color : (this.state.playerArray[3][0] == 2 ? this.state.player2Color : this.state.squareColor)}} onClick={this.clickSquare} onMouseOver={this.squareMouseOver} onMouseLeave={this.squareMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"vertical\" x={3} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"25px\", backgroundColor: this.state.verticalBricks[3][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div x={4} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"50px\", backgroundColor: this.state.playerArray[4][0] == 1 ? this.state.player1Color : (this.state.playerArray[4][0] == 2 ? this.state.player2Color : this.state.squareColor)}} onClick={this.clickSquare} onMouseOver={this.squareMouseOver} onMouseLeave={this.squareMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"vertical\" x={4} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"25px\", backgroundColor: this.state.verticalBricks[4][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div x={5} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"50px\", backgroundColor: this.state.playerArray[5][0] == 1 ? this.state.player1Color : (this.state.playerArray[5][0] == 2 ? this.state.player2Color : this.state.squareColor)}} onClick={this.clickSquare} onMouseOver={this.squareMouseOver} onMouseLeave={this.squareMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"vertical\" x={5} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"25px\", backgroundColor: this.state.verticalBricks[5][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div x={6} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"50px\", backgroundColor: this.state.playerArray[6][0] == 1 ? this.state.player1Color : (this.state.playerArray[6][0] == 2 ? this.state.player2Color : this.state.squareColor)}} onClick={this.clickSquare} onMouseOver={this.squareMouseOver} onMouseLeave={this.squareMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"vertical\" x={6} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"25px\", backgroundColor: this.state.verticalBricks[6][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div x={7} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"50px\", backgroundColor: this.state.playerArray[7][0] == 1 ? this.state.player1Color : (this.state.playerArray[7][0] == 2 ? this.state.player2Color : this.state.squareColor)}} onClick={this.clickSquare} onMouseOver={this.squareMouseOver} onMouseLeave={this.squareMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"vertical\" x={7} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"25px\", backgroundColor: this.state.verticalBricks[7][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div x={8} y={0} style={{float: \"left\", display: \"inline\", height: \"50px\", width: \"50px\", backgroundColor: this.state.playerArray[8][0] == 1 ? this.state.player1Color : (this.state.playerArray[8][0] == 2 ? this.state.player2Color : this.state.squareColor)}} onClick={this.clickSquare} onMouseOver={this.squareMouseOver} onMouseLeave={this.squareMouseLeave}></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{lineHeight: \"50px\"}}>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div orientation=\"horizontal\" x={0} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"50px\", backgroundColor: this.state.horizontalBricks[0][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"middle\" x={0} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"25px\", backgroundColor: this.state.horizontalBricks[0][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[0][0] : this.state.verticalBricks[0][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"horizontal\" x={1} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"50px\", backgroundColor: this.state.horizontalBricks[0][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[0][0] : this.state.horizontalBricks[1][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"middle\" x={1} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"25px\", backgroundColor: this.state.horizontalBricks[1][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[1][0] : this.state.verticalBricks[1][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"horizontal\" x={2} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"50px\", backgroundColor: this.state.horizontalBricks[1][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[1][0] : this.state.horizontalBricks[2][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"middle\" x={2} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"25px\", backgroundColor: this.state.horizontalBricks[2][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[2][0] : this.state.verticalBricks[2][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"horizontal\" x={3} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"50px\", backgroundColor: this.state.horizontalBricks[2][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[2][0] : this.state.horizontalBricks[3][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"middle\" x={3} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"25px\", backgroundColor: this.state.horizontalBricks[3][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[3][0] : this.state.verticalBricks[3][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"horizontal\" x={4} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"50px\", backgroundColor: this.state.horizontalBricks[3][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[3][0] : this.state.horizontalBricks[4][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"middle\" x={4} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"25px\", backgroundColor: this.state.horizontalBricks[4][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[4][0] : this.state.verticalBricks[4][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"horizontal\" x={5} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"50px\", backgroundColor: this.state.horizontalBricks[4][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[4][0] : this.state.horizontalBricks[5][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"middle\" x={5} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"25px\", backgroundColor: this.state.horizontalBricks[5][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[5][0] : this.state.verticalBricks[5][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"horizontal\" x={6} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"50px\", backgroundColor: this.state.horizontalBricks[5][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[5][0] : this.state.horizontalBricks[6][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"middle\" x={6} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"25px\", backgroundColor: this.state.horizontalBricks[6][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[6][0] : this.state.verticalBricks[6][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"horizontal\" x={7} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"50px\", backgroundColor: this.state.horizontalBricks[6][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[6][0] : this.state.horizontalBricks[7][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"middle\" x={7} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"25px\", backgroundColor: this.state.horizontalBricks[7][0] != this.state.brickDefaultColor ? this.state.horizontalBricks[7][0] : this.state.verticalBricks[7][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t\t<div orientation=\"horizontal\" x={7} y={0} style={{float: \"left\", display: \"inline\", height: \"25px\", width: \"50px\", backgroundColor: this.state.horizontalBricks[7][0]}} onClick={this.clickBrick} onMouseOver={this.brickMouseOver} onMouseLeave={this.brickMouseLeave}></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{lineHeight: \"25px\"}}>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t\t: <h3>Loading game...</h3>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Page(connect(state=>state)(Game))\n\n\n// WEBPACK FOOTER //\n// pages/game.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AA7DA;AA8DA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAlTA;AACA;AAoTA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}