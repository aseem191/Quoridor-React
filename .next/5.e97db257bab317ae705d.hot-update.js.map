{"version":3,"file":"5.e97db257bab317ae705d.hot-update.js","sources":["webpack:///pages/learn.js"],"sourcesContent":["import Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport urlname from '../components/urlname.js'\r\nimport { connect } from \"react-redux\";\r\nimport Page from \"./page.js\"\r\nimport { updateGame, updateName, updateGameID } from \"../redux/actions.js\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Layout from '../components/layout.js'\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t// light: will be calculated from palette.primary.main,\r\n\t\t\tmain: '#7ce7ff',\r\n\t\t// dark: will be calculated from palette.primary.main,\r\n\t\t// contrastText: will be calculated to contast with palette.primary.main\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#80a2ff',\r\n\t\t// dark: will be calculated from palette.secondary.main,\r\n\t\t},\r\n\t\ttertiary: {\r\n\t\t\tmain: '#33ffcc',\r\n\t\t// dark: will be calculated from palette.secondary.main,\r\n\t\t},\r\n\t\t// Used by `getContrastText()` to maximize the contrast between the background and\r\n\t\t// the text.\r\n\t\tcontrastThreshold: 3,\r\n\t\t// Used to shift a color's luminance by approximately\r\n\t\t// two indexes within its tonal palette.\r\n\t\t// E.g., shift from Red 500 to Red 300 or Red 700.\r\n\t\ttonalOffset: 0.2,\r\n\t},\r\n\r\n\tprops: {\r\n\t\t// Name of the component ⚛️\r\n\t\tMuiButtonBase: {\r\n\t\t// The properties to apply\r\n\t\t\tdisableRipple: true, // No more ripple, on the whole application 💣!\r\n\t\t},\r\n\t},\r\n});\r\n\r\nclass LoginPage extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tname: \"\"\r\n\t\t}\r\n\r\n\t\tthis.changeName = this.changeName.bind(this);\r\n\t\tthis.startGame = this.startGame.bind(this);\r\n\t}\r\n\r\n\tchangeName(event){\r\n\t\tthis.setState({\r\n\t\t\tname: event.currentTarget.value\r\n\t\t})\r\n\t}\r\n\r\n\tstartGame(event){\r\n\t\tif(this.state.name == \"\"){\r\n\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif(this.props.gameID){\r\n\t\t\t\tvar params = {\r\n\t\t\t\t\tid: this.props.gameID\r\n\t\t\t\t}\r\n\t\t\t\tfetch(urlname + \"/destroy\", {method: 'POST', headers: { 'Content-Type': 'application/json'}, body: JSON.stringify(params)}).then(response => response.json()).then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\tthis.props.dispatch(updateName(this.state.name));\r\n\t\t\tthis.props.dispatch(updateGameID(null));\r\n\t\t\tthis.props.dispatch(updateGame(null));\r\n\r\n\r\n\t\t\tconsole.log(\"done\")\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Layout>\r\n\t\t\t<MuiThemeProvider theme={theme}>\r\n\t\t\t<div align=\"center\">\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\t<h1 style={{fontFamily: \"Graduate\", fontWeight: \"bold\", fontSize: '40px' }}>How to Play</h1><br/><br/>\r\n\r\n\t\t\t\t<h3>The game is played by 2 players, with the first player on the top and second player on the bottom, and involves tiles and bricks. The game board looks like this: </h3>\r\n\r\n\t\t\t\t<img style={{height: \"600px\", width: \"500px\"}} src=\"/static/maingame.PNG\" /> \r\n\r\n\t\t\t\t<h3>During their turn, a player can either move one spot up/down/left/right, or can place down up to 10 bricks to restrict the other player's movement, like so:</h3>\r\n\r\n\t\t\t\t<img style={{height: \"600px\", width: \"500px\"}} src=\"/static/placingbricks.PNG\" />\r\n\r\n\t\t\t\t<h3>The aim of the game is to get to the other side of the board. Player 1 has to reach the bottom most row, while player 2 has to reach the topmost row.</h3>\r\n\r\n\t\t\t\t<img style={{height: \"600px\", width: \"500px\"}} src=\"/static/winning.PNG\" />\r\n\r\n\t\t\t\t<h3>Also, try not to box the other player in, as that would be unfair.</h3>\r\n\r\n\t\t\t\t<img style={{height: \"300px\", width: \"400px\"}} src=\"/static/blocked.PNG\" />\r\n\r\n\t\t\t\t<h3>Occasionally, alerts will pop up, which indicate strategies that the other player may be trying to use!</h3>\r\n\r\n\t\t\t\t<img style={{height: \"450px\", width: \"400px\"}} src=\"/static/stratalert.PNG\" />\r\n\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\t<h2>Have fun building quoridors!</h2>\r\n\t\t\t\t\r\n\t\t\t\t<br/>\r\n\t\t\t\t<Link  href={{ pathname: '/' }}>\r\n\t\t\t\t\t<Button variant=\"contained\" style={{fontFamily: \"Graduate\", fontWeight: \"bold\", fontSize: '16px' }} color=\"primary\">Go back</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<br/><br/><br/>\r\n\t\t\t\t<style jsx global>{`\r\n\t\t\t\t\tbody { \r\n\t\t\t\t\t\tbackground: #c9f5ff;\r\n\t\t\t\t\t\tbackground-image: url(\"/static/bgleft.png\"), url(\"/static/bgright.png\");\r\n\t\t\t\t\t\tbackground-position: left center, right center;\r\n\t\t\t\t\t\tbackground-repeat: repeat, repeat;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\th3 {\r\n\t\t\t\t\t\tfont-family: \"Rubik\", Times, serif;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\th2 {\r\n\t\t\t\t\t\tfont-family: \"Rubik\", Times, serif;\r\n\t\t\t\t\t}\r\n\t\t\t\t`}\r\n\t\t\t\t</style>\r\n\t\t\t</div>\r\n\t\t\t</MuiThemeProvider>\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Page(connect(state=>state)(LoginPage))\n\n\n// WEBPACK FOOTER //\n// pages/learn.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AALA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAzBA;AACA;AAiCA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AARA;AASA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AAIA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AAAA;AAAA;AAqDA;;;;AApGA;AACA;AAsGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}